{"version":3,"sources":["webpack:///./node_modules/_electron@13.6.6@electron/index.js"],"names":["path","pathFile","join","__dirname","getElectronPath","executablePath","fs","existsSync","readFileSync","ELECTRON_OVERRIDE_DIST_PATH","Error","module","exports"],"mappings":"sGAAA,oBAAW,EAAQ,QACbA,EAAO,EAAQ,QAEfC,EAAWD,EAAKE,KAAKC,EAAW,YAEtC,SAASC,IACP,IAAIC,EAIJ,GAHIC,EAAGC,WAAWN,KAChBI,EAAiBC,EAAGE,aAAaP,EAAU,UAEzC,0NAAYQ,4BACd,OAAOT,EAAKE,KAAK,0NAAYO,4BAA6BJ,GAAkB,YAE9E,GAAIA,EACF,OAAOL,EAAKE,KAAKC,EAAW,OAAQE,GAEpC,MAAM,IAAIK,MAAM,sGAIpBC,EAAOC,QAAUR,M","file":"js/chunk-35442d42.a19c837f.js","sourcesContent":["const fs = require('fs');\nconst path = require('path');\n\nconst pathFile = path.join(__dirname, 'path.txt');\n\nfunction getElectronPath () {\n  let executablePath;\n  if (fs.existsSync(pathFile)) {\n    executablePath = fs.readFileSync(pathFile, 'utf-8');\n  }\n  if (process.env.ELECTRON_OVERRIDE_DIST_PATH) {\n    return path.join(process.env.ELECTRON_OVERRIDE_DIST_PATH, executablePath || 'electron');\n  }\n  if (executablePath) {\n    return path.join(__dirname, 'dist', executablePath);\n  } else {\n    throw new Error('Electron failed to install correctly, please delete node_modules/electron and try installing again');\n  }\n}\n\nmodule.exports = getElectronPath();\n"],"sourceRoot":""}